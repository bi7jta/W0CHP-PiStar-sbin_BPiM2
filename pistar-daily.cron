#!/bin/bash

# W0CHP pistar-daily.cron (enhanced)
# Add Allstarlink , DVSwitch, 
# Make sure we are root
if [ "$(id -u)" != "0" ]; then
  echo -e "You need to be root to run this command...\n"
  exit 1
fi

mount -o remount,rw / # for shits and giggles

pkill pistar-hourly.cron > /dev/null 2>&1

# Stop all the services...
pistar-services fullstop > /dev/null 2>&1

CALL=$( grep "Callsign" /etc/pistar-release | awk '{print $3}' )
osName=$( lsb_release -cs )
psVer=$( grep Version /etc/pistar-release | awk '{print $3}' )
versionCmd=$( git --work-tree=/usr/local/sbin --git-dir=/usr/local/sbin/.git rev-parse --short=10 HEAD )
uuidStr=$(egrep 'UUID|ModemType|ModemMode|ControllerType' /etc/pistar-release | awk {'print $3'} | tac | xargs| sed 's/ /_/g')
modelName=$(grep -m 1 'model name' /proc/cpuinfo | sed 's/.*: //')
hardwareField=$(grep 'Model' /proc/cpuinfo | sed 's/.*: //')
hwDeetz="${hardwareField} - ${modelName}"
cronMins=$(shuf -i 0-59 -n 1)
cronHours=$(shuf -i 1-4 -n1)
tz=$( date +%Z )

# Host Files Update
/usr/local/sbin/HostFilesUpdate.sh 

# Purge the logs older than 2 days
rm -f $(find /var/log/pi-star/*.log -type f -mtime +1 -print)
rm -f $(find /var/log/mmdvm/*.log -type f -mtime +1 -print) #MMDVM_Bridge.log
rm -f $(find /var/log/ -type f -mtime +0 -print | grep .gz)

# Shrink nginx error log to stop it getting out of hand
echo "$(tail -500 /var/log/nginx/error.log)" > /var/log/nginx/error.log
echo "$(tail -500 /var/log/nginx/access.log)" > /var/log/nginx/access.log
sudo sh -c 'echo "" > /var/log/nginx/access.log'

# Shrink /var/log/Analog_Bridge.log log to stop it getting out of hand
echo "$(tail -500 /var/log/Analog_Bridge.log)" > /var/log/Analog_Bridge.log

# Shrink /var/log/asterisk/messages log to stop it getting out of hand
echo "$(tail -500 /var/log/asterisk/messages)" > /var/log/asterisk/messages

# Shrink /var/log/syslog log to stop it getting out of hand
echo "$(tail -500 /var/log/syslog)" > /var/log/syslog

# Shrink /var/log/monit.log log to stop it getting out of hand
echo "$(tail -500 /var/log/monit.log)" > /var/log/monit.log

# Shrink /var/log/netcheck log to stop it getting out of hand
echo "$(tail -500 /var/log/netcheck)" > /var/log/netcheck

# Shrink /var/log/php7.3-fpm.log log to stop it getting out of hand
echo "$(tail -500 /var/log/php7.3-fpm.log)" > /var/log/php7.3-fpm.log

# Shrink /var/log/lighttpd/error.log log to stop it getting out of hand
echo "$(tail -500 /var/log/lighttpd/error.log)" > /var/log/lighttpd/error.log

# log file perms
chown -R mmdvm:mmdvm /var/log/pi-star > /dev/null 2>&1
chmod 775 /var/log/pi-star > /dev/null 2>&1

 
# tmpfs for vnstat

# age mmdvmhost log backups:
/usr/local/sbin/pistar-mmdvm-log-backup-age > /dev/null

# Randomize the time for the daily cron jobs
sed -i "/cron.daily/c ${cronMins} ${cronHours}	* * *	root	cd / && run-parts --report /etc/cron.daily" /etc/crontab

# Start all the services...
#systemctl daemon-reload &> /dev/null # Reload systemd to account for service changes
pistar-services start > /dev/null 2>&1

echo "Done"

exit 0
