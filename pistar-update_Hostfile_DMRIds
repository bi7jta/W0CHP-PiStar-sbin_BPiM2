#!/bin/bash
#
###############################################################################
#                                                                             #
#                        Pi-Star Auto Update Tool                             #
#                                                                             #
#              Design and Development by Andy Taylor (MW0MWZ)                 #
#                            Enhanced by W0CHP                                #
#                                                                             #
###############################################################################
#
if [ "$(id -u)" != "0" ]; then
  echo -e "You need to be root to run this command...\n"
  exit 1
fi

exec 200>/var/lock/pistar-update.lock || exit 1
if ! flock -n 200 ; then
  echo -e "Another instance is already running...\n"
  exit 1
fi

main_function() {
	# Make the disk writable and stop cron to prevent it from making it R/O
    	systemctl stop cron.service > /dev/null 2<&1
    	pkill pistar-hourly.cron > /dev/null 2>&1
    	pkill pistar-daily.cron > /dev/null 2>&1

    # Ignore update OS because I am a Raspbian.

	#conn_check
	echo "Stopping Services..."
	pistar-services fullstop > /dev/null 2>&1
	echo -e "${TICK} Done!\n"

	# ensure FS is RW
	touch /root/.WPSD-updating > /dev/null 2>&1
	if [ ! -f /root/.WPSD-updating ] ; then
	    touch /root/.WPSD-updating > /dev/null 2>&1
	    if [ ! -f /root/.WPSD-updating ] ; then
		echo -e "Filesystem could not enter R/W mode...please try updating again.\n"
		exit 1
	    fi
	fi

	echo "Updating Hostfiles, User ID DB's & Various Talkgroup Lists..."
	/usr/local/sbin/HostFilesUpdate.sh 
	echo -e "${TICK} Done!\n"

	echo "Starting Services..."
	pistar-services start > /dev/null 2>&1
	echo -e "${TICK} Done!\n"

	echo "Updates complete, syncing disk cache..."
	rm /root/.WPSD-updating > /dev/null 2>&1
	/bin/sync
	/bin/sync
	/bin/sync
	systemctl restart cron.service > /dev/null 2<&1
	echo -e "${TICK} Update Process Finished!"
	if [ ! -t 1 ]; then # only output if not called from tty
		echo -e "\n<b><a style='color:white;text-decoration:underline;'' href='/config/changelog.php'>See the extended ChangeLog of the last 20 changes...</a></b>\n"
	fi
}

	if [ -t 1 ]; then
 		# run via terminal, only output to screen
 		main_function
	else
 		# if not run via terminal, log everything into a log file
 		main_function >> /var/log/pi-star/pi-star_update.log 2>&1
	fi

exit 0
